From 631a416fd01b6a0ac1f95ff62cf40e1fca9148ad Mon Sep 17 00:00:00 2001
From: edemkaaa <edemasanov2004@gmail.com>
Date: Fri, 14 Mar 2025 03:03:17 +0300
Subject: [PATCH] =?UTF-8?q?=D0=98=D1=81=D0=BF=D1=80=D0=B0=D0=B2=D0=B8?=
 =?UTF-8?q?=D0=BB=20=D0=BA=D0=BE=D0=BD=D1=84=D0=BB=D0=B8=D0=BA=D1=82=D1=8B?=
 =?UTF-8?q?=20=D0=B2=20=D0=BC=D0=B8=D0=B3=D1=80=D0=B0=D1=86=D0=B8=D0=B8=20?=
 =?UTF-8?q?=D0=BB=D0=B0=D0=B9=D0=BA=D0=BE=D0=B2?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../migrations/1623456789017-CreateLikes.ts   | 63 +++++++++++++++++++
 1 file changed, 63 insertions(+)

diff --git a/src/database/migrations/1623456789017-CreateLikes.ts b/src/database/migrations/1623456789017-CreateLikes.ts
index e69de29..70b84de 100644
--- a/src/database/migrations/1623456789017-CreateLikes.ts
+++ b/src/database/migrations/1623456789017-CreateLikes.ts
@@ -0,0 +1,63 @@
+import { MigrationInterface, QueryRunner, Table, TableForeignKey } from 'typeorm';
+
+export class CreateLikesTable1623456789017 implements MigrationInterface {
+    public async up(queryRunner: QueryRunner): Promise<void> {
+        // Создание таблицы likes
+        await queryRunner.createTable(
+            new Table({
+                name: 'likes',
+                columns: [
+                    {
+                        name: 'id',
+                        type: 'int',
+                        isPrimary: true,
+                        isGenerated: true,
+                    },
+                    {
+                        name: 'postId',
+                        type: 'int',
+                    },
+                    {
+                        name: 'userId',
+                        type: 'int',
+                    },
+                    {
+                        name: 'createdAt',
+                        type: 'timestamp',
+                        default: 'CURRENT_TIMESTAMP',
+                    },
+                ],
+            }),
+        );
+
+        // Добавление внешних ключей
+        await queryRunner.createForeignKey('likes', new TableForeignKey({
+            columnNames: ['postId'],
+            referencedTableName: 'posts',
+            referencedColumnNames: ['id'],
+            onDelete: 'CASCADE',
+        }));
+
+        await queryRunner.createForeignKey('likes', new TableForeignKey({
+            columnNames: ['userId'],
+            referencedTableName: 'user',
+            referencedColumnNames: ['id'],
+            onDelete: 'CASCADE',
+        }));
+    }
+
+    public async down(queryRunner: QueryRunner): Promise<void> {
+        const table = await queryRunner.getTable('likes');
+        if (table) {
+            const foreignKeyPost = table.foreignKeys.find(fk => fk.columnNames.includes('postId'));
+            const foreignKeyUser = table.foreignKeys.find(fk => fk.columnNames.includes('userId'));
+            if (foreignKeyPost) {
+                await queryRunner.dropForeignKey('likes', foreignKeyPost);
+            }
+            if (foreignKeyUser) {
+                await queryRunner.dropForeignKey('likes', foreignKeyUser);
+            }
+        }
+        await queryRunner.dropTable('likes');
+    }
+}
-- 
2.39.5 (Apple Git-154)

